<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABU
        CQAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAARADAAEBAQABCAYAAQQYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wMAAYsFrQGGAW4HAARS
        KwABUgFzAc8F2wG0AewBUgUAAVIBGgF6AZoCUioAAVIBkwG0AtsC1QLUAfcBUgUAAVgBwwJZAZoCUioA
        Ac8BCQHcA9sB1QHcAc8BhgUAAVgBwwNZAZoCUioAAc8BGQH3ApEBCQG0AaYGAAFYAfYBwwNZAZoCUioA
        AW4BdAGZAXkBdAFsBHIBTwHrAQADWAGgA1kBmgJSAUwCUiYAAXQCmgEaAZkBcwR4AZcBcgFSAgABWAH2
        AcMBegJZAZoBUgKgAlIkAAFLAZkDmgEaAUsDeAKXAXIBUgIAA1gBegGgAlkBegJZAaACUiMAAUsBbgFz
        AXQBbgJLBHgBmAGXAUkFAAFYAXoBmgFZA3oBWQGgAUwBUiMABUsBcwHtAuwBmQGYAUkGAAFYAcMBmgN6
        AZoCWQGgAUwkAANLAUoBbgF0AZkBeQF0AUkHAAFYAcMCegGaAaABwwGaAVkBwwFSKAABdAKaARoBmQFL
        BwABWAHDAZoBegGgAcMBWAFSAfYCUicAASoBGgOaARoBUgcAAlgBwwGaAaACWAH/AlIoAAEqAVIBeQGa
        A1IIAAJYAcMBoAHDAf8BWAFSKgAFUgFLCQACWALDAlgsAANSAUsLAARYJAABQgFNAT4HAAE+AwABKAMA
        AUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAcABPwGHAf8FAAEfAQMB/wUAAR8BAQH/BAABgAEfAQAB/wQA
        AcABPwEAAX8EAAHgAQEBAAEHBAAB4AEAAcABAwQAAcABAAHAAQEEAAHAAQAB+AUAAeABAQH4BQAB8AED
        AfgFAAH/AQMB+AUAAf4BAwH4AQEEAAH+AQMB/AEDBAAB/wEDAf4BBwQAAf8BhwH/AQ8EAAs=
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAANRVgAHJC2ADKkygBIsNMATrPVAFC01gBswd0AkdHmAGuRngAeKS0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAJJC0AEkpcACB0kAAwn8QAParOAEmw0gBYudoAZsLjAHfK6ACH0usAbK3CADtw
        ggAyXGoARGRuADhMUwATGh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABJJWwAllLgANKPIAESu0gBIsdMASrHTAGK/4AB+0fAAgtXzAH3U
        8QBtyuYAWbfXAGW41ACIyN0AcZmnACY1OgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFU1fACybwAA5p8wARq/TAEix1ABJstQAYcDhAH7T
        8QCA2PYAedn2AHDU8gBmzOsAbszpAIPT6gBxs8gAP3ODACtUYQA8XGYAOU5UABcfIQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYTmAAMp3CADynzQBGr9MASLHUAEiy
        1ABgwOEAfNTxAH7b+QB23fwAct37AHLe+gB12/cAeNfxAG3J5QBXtNAAWq/KAH6+1QB2oa8AL0BGAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABtQYQA4ocQAP6rOAEWv
        1ABHsNQAR7HUAF/B4QB81fIAfdz6AHTf/QBw4f0AceL9AHLh+wBx3fcAbNfxAGLO6QBnzOYAf9HpAHe6
        zgBCd4cAJExaADVUXgA5TlUAGSIlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH1JiAD6l
        xgBCrM8ARa/UAEaw1ABHsNQAX8HhAHzV8gB83PoAcuH9AG7j/QBt5P0AbeX9AGzk/ABs5PsAbOL5AG/f
        9QB22O8Ab8rjAFSxzQBOpcMAcrXMAHuotwA3SlEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAiVGMARajIAEWu0QBEr9QARLDUAEaw1ABbwuIAddj0AHbg+wBw4/0AbOX+AGvm/gBq5/4Aaef+AGno
        /gBq6P0Aa+b6AG7h9gBq2fAAYM/oAGHJ5AB9zuUAgr/SAEh6iwAXPUoAChwiAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACZVZABNq8oASa/SAEOv1ABDsNQARbDUAFbD4wBs2/gAb+P9AG3l/QBq5/4Aaef+AGfp
        /gBm6f4AZuv+AGbr/QBl6/0AZev8AGfo+wBq5vgAb9/0AHvU6QB6xNwAVqvIADWKpwAYP00AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAKVdmAFOuzABMsdMAQq/UAEGw1ABDsNQAU8TkAGje+QBs5v4Aa+f+AGjp
        /gBn6f4AZev+AGTs/gBk7f4AY+3+AGLu/gBh7/4AY+7+AGju/QBs6voAceLxAHPZ6QBx0OUAaLzTADt4
        igAUOkYACRwiAAAAAAAAAAAAAAAAAAAAAAAsWGcAWrHPAFC01ABCr9QAQLDUAEGw1ABRxOQAZt/5AGrn
        /gBp6f4AZ+v+AGXs/gBj7f4AYe/+AGHv/gBg8P4AYPD+AGDx/gBg8f4AYvD9AGPw/QBj8voAbfP4AJLw
        9QCj4+0AZ7jNADCJpgAXQlAAAAAAAAAAAAAAAAAAAAAAADBaaABhtdEAU7XVAEGv1AA/r9QAQK/UAFDF
        5ABl4PkAaOj+AGfq/gBl7P4AZO7+AGLu/gBg8P4AX/H+AF7y/gBe8v4AXvP+AF7z/gBe8v4AXvP+AF34
        /gBq/P4AnPv7ALfx9gB1zeQAOaPHABtPYAAAAAAAAAAAAAAAAAAAAAAAM1xpAGi40wBWt9cAQK/VAD6u
        1AA/rtQAT8XkAGPg+QBm6f4AZOz+AGPu/gBi8P4AYPD+AF7x/gBc8/4AXPT+AFv0/gBb9f4AW/X+AFv0
        /gBb9f4AWvn+AGj8/gCc+/sAt/H2AHXN5AA3o8cAGk9gAAAAAAAAAAAAAAAAAAAAAAA3XWoAbrvVAFm5
        2AA/r9YAPa7VAD6u1ABOxeQAYuH5AGXq/gBj7f4AYu/+AGDx/gBe8f4AXfP+AFv0/gBb9f4AWvX+AFr2
        /gBa9v4AWvb+AFr2/gBZ+v4AZ/z+AJv7+wC38fYAdM3lADajyAAZT2AAAAAAAAAAAAAAAAAAAAAAADpf
        awB1vtcAXLvaAD+v1gA7rtUAPK7UAEzF5ABg4vkAZOz+AGLv/gBg8P4AXvL+AFzz/gBc9f4AWvb+AFn2
        /gBY9/4AWPj+AFj4/gBY+P4AWPj+AFn6/gBn/P4Am/v7ALfx9gB0zeUANaPIABlPYAAAAAAAAAAAAAAA
        AAAAAAAAPWBsAHvB2QBfvNsAPq/WADqu1QA7rtQAS8bkAF/j+QBj7f4AYvD+AF/x/gBc8/4AW/T+AFv2
        /gBZ9/4AV/f+AFf5/gBX+f4AV/n+AFf5/gBX+f4AWPv+AGb9/gCa+/sAt/H2AHPM5QA0osgAGE5gAAAA
        AAAAAAAAAAAAAAAAAABAYm0AgMTbAGK93AA8r9YAOK7VADmu1ABKxuQAX+T5AGPu/gBi8P4AX/L+AFz0
        /gBb9f4AWff+AFj4/gBW+f4AVfr+AFX7/gBV+/4AVfn+AFb5/gBW+/4AZP3+AJr7+wC38fYAcszlADOh
        yAAYTmAAAAAAAAAAAAAAAAAAAAAAAEJjbgCGxtwAZL7dADuu1gA3rdUAOK3VAEXB4QBV2PAAZOb3AHPw
        +wBx8/0AaPT9AGL1/QBb9/4AWPn+AFX6/gBU/P4AVPz+AFT8/gBU+v4AVfr+AFX8/gBj/f4Amfv7ALbx
        9gBxzOUAMqHIABdOYAAAAAAAAAAAAAAAAAAAAAAARGRuAIrI3gBmv90AOq7WADWs1QA2rdUAO7TZAEG9
        3wBn0+oAmO72AJn1+wCD8/wAcfT9AGH2/gBZ+f4AVvr+AFP8/gBS/P4AUvz+AFP8/gBU+/4AVPz+AGP9
        /gCZ+/sAtvH2AHDM5QAwocgAF05gAAAAAAAAAAAAAAAAAAAAAABGZW8AjcrfAGfA3gA5rdUAPLLYAEi7
        3ABCttkAOK7VAF/C4ACX4O0Aou31AJjx+gCJ9PwAd/b9AGz4/QBm+f0AXvr9AFj8/QBU/P4AVfz+AFb8
        /gBU/P4AYv3+AJn7+wC28fYAb8zlAC6hyAAWTmAAAAAAAAAAAAAAAAAAAAAAAEdlbwCPy98AZ8DeADet
        1QBRwt8AeN7uAGLO5QA+s9gARLXZAFvA3gB71egAouz1AK33+gCm+PsAm/j7AI32+gB89/sAaPr8AFz7
        /gBc+/4AW/z+AFb8/gBi/f4Amfv7ALbx9gBuzOUALKHIABVOYAAAAAAAAAAAAAAAAAAAAAAAP2JtAIDF
        3ABevNwANKzVAF/N5QCW9voAeuPwAEnB3wA6udsAObnaAF3J4gCW4u8Arez0AK3s9ACq7vUApvL3AJj1
        +gCA+fsAcfr9AHH6/QBs+/0AXfz9AGH+/gCZ+/sAtvH2AG3L5QAroMgAFE1gAAAAAAAAAAAAAAAAAAAA
        AAAnWWkAT7PUAEKy1wAwq9UAXM3lAJH2+gCB8vgAYOTxAFHg7wBJ4O8AUdjqAGDL5ABlx+IAZcbiAHrT
        5wCh6vMAsvf6AKf5+gCh+fsAofn7AJX6/ABu/P0AYf7+AJn7+wC28fYAbcvlACugyAAUTWAAAAAAAAAA
        AAAAAAAAAAAAABVSZwArpc4ALarUACyq1QBbzeYAj/b6AIj+/gB0/v4AZf7+AFn+/gBN5vEAQMPgADy2
        2gA+tdoAXcXgAJPg7gCx7vUAse71ALTv9QC78vcAsPb5AIL6+wBt/f0Anvr6ALbx9gBsy+UAKqDIABNN
        YAAAAAAAAAAAAAAAAAAAAAAAFFJnACqlzgAsqtQALKrVAFzN5gCU9voAjv7+AHv+/gBv/v4AZf7+AGHz
        +ABg5PAAZt7uAHHd7gBy2esAa87lAGjJ4wBoyeMAdc7lAJba6wCp5/EAn/L3AJ76+wCz+foAtvH2AGvL
        5QApoMgAE01gAAAAAAAAAAAAAAAAAAAAAAASSl0AJZW6ACihyAArqNMAWMnkAI3u9gCO+PsAg/39AHv+
        /gB0/v4Adf7+AH3+/gCK/P0Amvv8AIXm8gBQwN8AM6zVADGr1ABCstcAcsXhAJnX6QCw6fIAwfb4AMP3
        +QC18fYAasrlACefyAASTGAAAAAAAAAAAAAAAAAAAAAAAAgiKwARRVYAHHSQACmjzQA/uNwAWMnkAHHf
        7wCL+PsAjv7+AIj+/gCJ/v4AkP7+AJX3+gCc7PQAjNvrAGnE3wBQtdcAQK3SAD2t0gBPttkAZ8PfAJDW
        6ACw5/EAvPH1ALXx9gBqyuUAJp/IABJMYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQSFkAJJS7ACij
        zQApqNMAVcfjAIzv9gCX+PsAkvj7AJP4+wCY+PsAl+vxAJTT4QCJw9cAdrvRAGKwywBIo8MANqDDAC+l
        zQA7sNYAb8TgAJrX6QCs5/EAq+zzAGXH4wAln8gAEUxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgi
        KwARR1oAG3ORACagygA9t9wAV8rlAF3P5wBaz+cAW8/nAF7P5wBYr8IATHmFAEJeZwA5WmUAL1ViACNP
        XgAeXnMAJIutADCt1QBJttkAXr/eAGfH4gBnyeMARLfcACSfyAARTGAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAPRFYAIpS6ACWjzgAlo84AJaPOACWkzgAmo84AJqTOABx0kgAIJC4AAAAAAAAA
        AAAAAAAAAAAAAAYfJwAab4sAJaTNACWjzQAlpM8AJqbSACao1AAlpdEAIpnBABBJXAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAciKwARSl0AElFnABJRZwASUWcAElJnABNRZwATUmcADjpJAAQS
        FwAAAAAAAAAAAAAAAAAAAAAAAw8TAA03RQASUmYAElFmABRcdQAeh6oAI6DKABp2lQARTWAACCQuAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBUbABZogwAhmcEAD0dZAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8A////AP///AAP//wAD//8AAD//AAA//wAAA/8AAAP/AAAA/wAAAP8AA
        AA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AA
        AA/wAAAP8AAAD/wD8A/8A/AP////P////z8=
</value>
  </data>
</root>