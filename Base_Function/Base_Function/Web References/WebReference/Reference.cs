//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Base_Function.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WEBESPortSoap11Binding", Namespace="http://esb.senyint.com")]
    public partial class WEBESPort : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback setWebServiceEngineImpOperationCompleted;
        
        private System.Threading.SendOrPostCallback executesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WEBESPort() {
            this.Url = global::Base_Function.Properties.Settings.Default.Base_Function_WebReference_WEBESPort;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event setWebServiceEngineImpCompletedEventHandler setWebServiceEngineImpCompleted;
        
        /// <remarks/>
        public event executesCompletedEventHandler executesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setWebServiceEngineImp", RequestNamespace="http://esb.senyint.com", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setWebServiceEngineImp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] WebServiceEngineImp webServiceEngineImp) {
            this.Invoke("setWebServiceEngineImp", new object[] {
                        webServiceEngineImp});
        }
        
        /// <remarks/>
        public void setWebServiceEngineImpAsync(WebServiceEngineImp webServiceEngineImp) {
            this.setWebServiceEngineImpAsync(webServiceEngineImp, null);
        }
        
        /// <remarks/>
        public void setWebServiceEngineImpAsync(WebServiceEngineImp webServiceEngineImp, object userState) {
            if ((this.setWebServiceEngineImpOperationCompleted == null)) {
                this.setWebServiceEngineImpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWebServiceEngineImpOperationCompleted);
            }
            this.InvokeAsync("setWebServiceEngineImp", new object[] {
                        webServiceEngineImp}, this.setWebServiceEngineImpOperationCompleted, userState);
        }
        
        private void OnsetWebServiceEngineImpOperationCompleted(object arg) {
            if ((this.setWebServiceEngineImpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWebServiceEngineImpCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:executes", RequestNamespace="http://esb.senyint.com", ResponseNamespace="http://esb.senyint.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string executes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("executes", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void executesAsync(string xml) {
            this.executesAsync(xml, null);
        }
        
        /// <remarks/>
        public void executesAsync(string xml, object userState) {
            if ((this.executesOperationCompleted == null)) {
                this.executesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexecutesOperationCompleted);
            }
            this.InvokeAsync("executes", new object[] {
                        xml}, this.executesOperationCompleted, userState);
        }
        
        private void OnexecutesOperationCompleted(object arg) {
            if ((this.executesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.executesCompleted(this, new executesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.entry.hip.senyint.com/xsd")]
    public partial class WebServiceEngineImp {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void setWebServiceEngineImpCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void executesCompletedEventHandler(object sender, executesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class executesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal executesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591