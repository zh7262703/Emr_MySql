<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>22, 27</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABK
        EwAAAk1TRnQBSQFMAgEBCgEAARABAAEQAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAATADAAEBAQABCAYAAQwYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAA7wE8wTwAe8B7QHs
        AZIB9wEOBCIBIwExASoBIwIiAQ4BIgEOAiIgAAO8AfMB9ALzArwB8AEHAesBbQHtAvcFIgEjAyoBIwMi
        AQ4CIiAAA7wB8gPzAfICvAHvAW0BSwHqARwB9wEiASMCIgEqASsCKgExASkBIwUiIAACvAGSAQcBvAL3
        AfEBBwG8Ae0BRAFuAUsBcwHvAioBKQEqAjEBKwExASoBKQEqBSIgAAK8Ae8BvAHzAfIC7wG8AZIBbgFE
        AW4BdAFuAQcBMQIqAjEBWAIxASoCKQEiASoDIyAAArwC7AHtAfMC7wHxAQcBkwFvAUsBkwEcAQcIMQIq
        ASkBMAIxAiogAAW8AfMC8AHxAbwB9wF0AW4BdAGTAQcEMQFSATECUgMqATECWQIqIAADvAMHAfcC7wK8
        AXQBbgHvAbwBBwF5AlkBMQIrAXQBMQEqATEBKgFSAXkBKgEpASsgAAK8Au8BBwG8AfcC7wEHAewBbQFE
        Ae0B7wEHARkB8AFZATIBMQE4ATECKgEyASoBcwHvASsBKgFLIAACvAHvAe0BBwHwAgcBvAHwAbwB7wFL
        AW4B9wEHAhkBeQIyAVkBMQIrATEBKwExAVIBMQIrIAACvAEHAfAB8gHzAfIB8QEHAfABvAHwAW4BEgH3
        AQcCGQEIAVgBWQFYASsEMQEyATEBKwExASsgAAK8Ae8BBwHvAQcC7wEHArwB8wGTAW4BBwG8BAkBmQEx
        ASsBMgExBFkBMQFYASsgAAK8AfcCvAHwAbwB8AHxApIC7QHvArwDCQHcAQkBWAExATIBMQJZAXkCmQJZ
        IAACvALwAfEB8wHyA/MD8QG8AQcBvAXcAbsBOAEyA1kBeQLcAZkBuyAAArwB8ALxAfMD8gPzAfEB8AEH
        AfAG3AEJAu8BBwFYAQcB3APbIAACvAHwAfED8ALxA/MB8gHxAQcB8QvcBdsgAAKsA8cFpgJlAV8DCgEc
        Ae8BSgFEAUoBcwETAQ8EEQIQAUMBbgMOAQ8BEAMiAQ8CDgEABA4D7ALqAW0B6gESARMBEgFtAeoBEgPq
        BMcEpgNlAl8DCgEUAW4BSgERAW0BmQEcARUCDgEPARACEQEVAW4CDgEAAg4CIgEPBg4CAALsAeoBEwHq
        AewBbQETARUC6wFtARUBFAESARQCxwamAmUCXwQKAW0BbgFtARQBcwEaARwB6gFDAhQBEQEQARUBEwFz
        Bg4BEAIOAg8BDgEAAw4D7AEUAewBkgHsAWYBQwH3Ae0B7AFsAQ8B7AHrAccGpgEEAmUBXwUKAUQBbQFz
        AesBmQEaAewCFAISAW0CQwFtAXMJDgEPBg4C7QGSAWwBrgH3AewCDQL3AZIBbAEPAe0B7ASmBAQBZQJf
        AgoCQwEUAkQBbQHrAhwBEgEOARIBbQHqAesBEgETAXMBbggOAQABDgIABA4B8QHwAbwBkQHrAfIBBwEN
        AQoBCQHzAewBQwETAvMDpgFmAUQBZgIEA18B6wFuAXQB6gEKAUQBEQEQARIC7QHrAQ4BFAESAW0B7ALr
        AXMBbgEOASIBDwMOASIBDwgOAfQB8wG8AQcB7ALwAQ0BDgG1AfEBEwEKAesB/wH0AqYBZQEqASsBSwFm
        AV8BZQHrAuwB6gESAgoBbgEOAQ8BHAEaAZIB7AESAuoBbQHsAesC7QFzAUsBRAEiAg4BIgEjAQ8IDgH0
        Af8BBwH3AewB8AHyAQ0BDgGuAewBDwEKAe0C/wKmARUBUwF6AXQBbgHsAesBcwHsAesBQwEUAgoBbgEP
        ARIBGgEcAe8BHAHsAesBbQHrAewBEgHsAW0BHAF1AXQBSwEjAREBIgEjBQ8BEQEUARMBbAL0Ae8BtQFs
        Ae0B8wENAQ4BQwINAQ4BBwL0AqYBRAFSAZkCdAGTAuwBZgESAWYDCgFKARIFHAEHAe8B7QLsARIB7AHq
        AewCmgF0AW0BFAEAAQ4BEQFDARMBbgXsAt0BkQK1AWYBbAFmAQoBDQFmAa4BAAEJAd0B9AKmAkQBbgKT
        AuwCEgUKAm4BHAFtAuwBvAPvARwBbQEQAewBEgHrAXQBegF0AW0BEQEOARIEmQOaApkCCQG1AfcBCQHs
        Aa4B7AENAWUBtQGuARED3QKmAWYBRQFEARIBZgHqAWYBEQYKAUoBbgHsARMB6wEUBLwBHAETARABFAEV
        AW0BdAGaAXQB6gEPAUMBBwUbA8MBGgEJAt0B7wEJAbsBGQEJAWYBbAHwAeoBbAPdA6YCZgFlCgoBSgEc
        AewBFQFtAREB6wEHAbwB7wHtAeoBFQFtAUMB6wFzAXQBbgESAesB7AHxAfIC8wb0AQkB3QEZAQcBmQMZ
        AesBkQH0AeoBrgHdAgkCpgNlAl8JCgFKARwB7QEUARMB6gEVAxwBBwHvAW0B6wESAZIB9wFLAewBuwK8
        AfAB8QHyB/MDCQG8ARwCCQG7AQ4BtQEbAW0BrgMJAaYDZQJfCgoBSgFuARwBFAESAewBbQEHARsB7wMc
        Au8BHAG1AW4B7AG7BAkB8AEZAfEC8gEZAfMB8gEJArsB6wFDAbsBCQGRAbQBCQG7Ae0BtAMJAaYDZQJf
        CgoCSgHsAQcBkgHsAZIBHAEaAnMB6wNzAW0DtQO7BgkC3QLxAboEuwG0AQkC3AEJAbsB7QG7AdwCuwNl
        Al8LCgJKARQBbgEcAe8BHAFuAZkCcwNtAW4BSgO0A7UDuwcJAroFuwLcAbsB3AK7AroBtAtJAU8DSQFP
        AyUBIAIlAU0BJgMlAU0CJQIgAQABCwEOCQsDAAEOAiEBIgchASICSQHqARIBFAJPAUkBTwNJAUgBSQFI
        AU8DSQFIAU8BJQEmASUBJgElAyAFJQEgAQEBIAEADQsBDgEAAiEBSQchAkkBEgFtARIBEQNPAQ4BTwFJ
        AfQCSQHzAQcB7QFJAU8BSQFPAU0CJQEmASABHwElBCACJQEgASUBHwkLASMGCwEhASIBKAUhARIBFAFJ
        ARMBSQERAQ4BAAZPAkkCTwH2AU8BbQFJAf8BTwMgAh8DAQIgAiUBJgEsASUBHgEOBAsBIgYjBAsBIQEi
        ASECAAIRAuwBtQHqARIBDgEAAQ4BQwVPAQ0DSQH/ARABcQGSAQ8CTwIgASUBHwEBAR8B6QEBAR8BIAEl
        ASwDJQFGBAsCIwckASMCCwMhAQ8BEAEJAe0BcwFKAewB6gEPAQABDwEUAUoDTwFJAU8BAAFIBEkBTwHC
        AU8BSQFPASACJQEfAQEEHwEgASUCJgEgAekBIAIiAyMEJAElAyQBIwILAyEBFQHsAbwBHAFzAnkBHAHs
        AQABEQFJAUoETwdJAk8BSQJPASUCIAIfAgECHwEgAiUCLAEmASUDIgQjBCUBJAIjAiIDIQHqAesBHAHr
        AXICUQF5AXMCDgIoAk8ISQZPAiUCHwMBAR8BAQIgAyUBLAEgAQ8BRAJFA0QBJAErAiUBJAQjAyEBQwFR
        AusBmQF5AVEBeQFzARABIQIoAk8HSQFPAUkBTwJJAk8CJQIfAQEBHwIBAR8CIAElASABHwEsASUDRAJF
        AkwBRQNMAUUBRAEVAkQBDgIhAQ4BSgFzBZkBHAQhAk8DSQFyAUgCSQFIAWwBDgFyAU8BSQFPAyUBIAEf
        AgECHwEgAiUBJgEgASUBJgEHArwB7wHwAZkBdARMAZMDbgFtBAABKAFtAewBHAEaAfABmQFtASEBDwIh
        Ak8BSQH2AUkBBwFPAkkBSAH/AREB/wNJAyUCIAIfAiABJQEmASUCHwElASAHGQHwAkwBdAIZAfACCQMA
        AQ4BSQHrAe8BBwG8AQkBHAEVAiEBDwEoAUkBTwJJAf8BIQEAAkkBTwH/ASEBEwEOAkkDJQYgASUBRwFN
        BCUCCQYZAfABvAEJARkECQEAASEBDgEQASgBSgHsAbUBHAH3AesEIQFJBE8C/wEAAk8DSQHsAQ4CSQIm
        ASwBJgEgASYBJQIgAiYBJQEgAU0BJQFNEAkCIQEiASgBIgEoAVABcwFKAQ8CAAIhAQ8BDgFJAU8BSQFP
        AUkBEQFDAkkBSAHsAUkBSAFxAkkFJgElBCYBTQEmASUBIAElAR8Buw0JAbsBtAQhBCgBDgMAAiEBEAEh
        AUkFTwhJAU8BSQImASwBJQEmASACJgEsAiYCJQEgAiUGtAG6AdwDugW0BSEBKAFJASEEAAEhAQ8BIgEh
        BE8BSQJPB0kBTwFJASwCTQMmAiwBJgclAbMPtAUhAUkBIQUABCEBQgFNAT4HAAE+AwABKAMAAUADAAEw
        AwABAQEAAQEFAAGAAQEWAAP//wCCAAs=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>137, 27</value>
  </metadata>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
</root>